## template: jinja
#cloud-config

packages:
    - wget

runcmd:
    - /root/install-cwagent.sh

write_files:
    - path: /root/install-cwagent.sh
      owner: root:root
      permissions: '0700'
      content: |
        #!/bin/bash

        set -e
        ILLINOIS_MODULE=ec2logs
        . /etc/opt/illinois/cloud-init/init.sh


        illinois_init_status running

        illinois_log "downloading CWAgent"
        rpmfile=$(mktemp -t amazon-cloudwatch-agent.XXXXXXXX.rpm); tmpfiles+=("$rpmfile")
        wget -O "$rpmfile" "https://s3.{{v1.region}}.amazonaws.com/amazoncloudwatch-agent-{{v1.region}}/amazon_linux/amd64/latest/amazon-cloudwatch-agent.rpm"

        illinois_log "installing CWAgent"
        illinois_rpm_install "$rpmfile"

        cfg_file=/etc/rsyslog.conf
        cfg_file=$(mktemp -t rsyslog.XXXXXXXX.conf); tmpfiles+=("$cfg_file")
        cp /etc/rsyslog.conf "$cfg_file"
        rsyslog_restart=no

        if ! egrep -q '^\s*\$FileCreateMode\s+0[6420][40]0\s*(\s+#.*)?$' "$cfg_file"; then
            illinois_log "setting rsyslog file creation mode"
            if egrep -q '^\s*\$FileCreateMode\s+' "$cfg_file"; then
                sed -i -re 's/^\s*\$FileCreateMode\s+[^#]+(\s+#.*)?$/$FileCreateMode 0640\1/' "$cfg_file"
            else
                sed -i -re '/^#### GLOBAL DIRECTIVES ####/a $FileCreateMode 0640' "$cfg_file"
            fi
            rsyslog_restart=yes
        fi

        if ! egrep -q '^\s*\$ActionFileDefaultTemplate\s+RSYSLOG_FileFormat\s*(\s+#.*)?$' "$cfg_file"; then
            illinois_log "setting rsyslog modern format"
            if egrep -q '^\s*\$ActionFileDefaultTemplate\s+' "$cfg_file"; then
                sed -i -re \
                    's/^\s*\$ActionFileDefaultTemplate\s+[^#]+(\s+#.*)?$/$ActionFileDefaultTemplate RSYSLOG_FileFormat\1/' \
                    "$cfg_file"
            else
                sed -i -re \
                    '/^#### GLOBAL DIRECTIVES ####/a $ActionFileDefaultTemplate RSYSLOG_FileFormat' \
                    "$cfg_file"
            fi
            rsyslog_restart=yes
        fi

        if [[ $rsyslog_restart = "yes" ]]; then
            illinois_log "restarting rsyslog"
            if rsyslogd -N1 -f "$cfg_file"; then
                cp "$cfg_file" /etc/rsyslog.conf
                systemctl restart rsyslog
            else
                illinois_log err "errors in the edited rsyslog.conf"
            fi
        fi

        [[ -e /etc/opt/illinois/cloud-init/ec2logs.conf ]] && . /etc/opt/illinois/cloud-init/ec2logs.conf

        : ${loggroup_prefix=ec2/}
        : ${metrics_collection_interval:=60}
        : ${metrics_namespace:=CWAgent}
        : ${net_resources:=*}

        net_resources_json=$(
            IFS=,
            read -ra _arr <<< "$net_resources"
            for i in "${!_arr[@]}"; do
                _arr[$i]="\"${_arr[$i]}\""
            done
            echo "[ ${_arr[*]} ]"
        )

        cat > /opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent.json <<HERE
        {
            "agent": {
                "metrics_collection_interval": ${metrics_collection_interval},
                "run_as_user": "root",
                "region": "{{v1.region}}",
                "omit_hostname": true
            },
            "logs": {
                "logs_collected": {
                    "files": {
                        "collect_list": [
                            {
                                "file_path": "/var/log/audit/audit.log*",
                                "log_group_name": "/${loggroup_prefix}var/log/audit/audit.log",
                                "log_stream_name": "{instance_id}"
                            },
                            {
                                "file_path": "/var/log/boot.log*",
                                "log_group_name": "/${loggroup_prefix}var/log/boot.log",
                                "log_stream_name": "{instance_id}"
                            },
                            {
                                "file_path": "/var/log/cloud-init.log",
                                "timezone": "Local",
                                "timestamp_format": "%Y-%m-%dT%H:%M:%S.%f",
                                "log_group_name": "/${loggroup_prefix}var/log/cloud-init.log",
                                "log_stream_name": "{instance_id}"
                            },
                            {
                                "file_path": "/var/log/cron*",
                                "timezone": "Local",
                                "timestamp_format": "%Y-%m-%dT%H:%M:%S.%f",
                                "log_group_name": "/${loggroup_prefix}var/log/cron",
                                "log_stream_name": "{instance_id}"
                            },
                            {
                                "file_path": "/var/log/messages*",
                                "timezone": "Local",
                                "timestamp_format": "%Y-%m-%dT%H:%M:%S.%f",
                                "log_group_name": "/${loggroup_prefix}var/log/messages",
                                "log_stream_name": "{instance_id}"
                            },
                            {
                                "file_path": "/var/log/secure*",
                                "timezone": "Local",
                                "timestamp_format": "%Y-%m-%dT%H:%M:%S.%f",
                                "log_group_name": "/${loggroup_prefix}var/log/secure",
                                "log_stream_name": "{instance_id}"
                            },
                            {
                                "file_path": "/var/log/sudo.log*",
                                "timezone": "Local",
                                "timestamp_format": "%b %-d %H:%M:%S",
                                "multi_line_start_pattern": "{timestamp_format}",
                                "log_group_name": "/${loggroup_prefix}var/log/sudo.log",
                                "log_stream_name": "{instance_id}"
                            },
                            {
                                "file_path": "/var/ossec/logs/ossec.log*",
                                "timezone": "Local",
                                "timestamp_format": "%Y/%m/%d %H:%M:%S",
                                "log_group_name": "/${loggroup_prefix}var/ossec/logs/ossec.log",
                                "log_stream_name": "{instance_id}"
                            },
                            {
                                "file_path": "/var/ossec/logs/alerts/alerts.json",
                                "timezone": "Local",
                                "timestamp_format": "%Y-%m-%dT%H:%M:%S.%f",
                                "log_group_name": "/${loggroup_prefix}var/ossec/logs/alerts/alerts.json",
                                "log_stream_name": "{instance_id}"
                            }
                        ]
                    }
                }
            }
        }
        HERE
        chown root:root /opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent.json
        chmod 0644 /opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent.json

        illinois_log "translating CWAgent config file"
        /opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -a fetch-config -m ec2 -c file:/opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent.json -s

        illinois_init_status finished

merge_type: 'list(append)+dict(recurse_array)+str()'
